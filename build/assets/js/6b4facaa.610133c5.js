"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7942],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>c});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=a.createContext({}),d=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=d(n),k=l,c=u["".concat(o,".").concat(k)]||u[k]||m[k]||r;return n?a.createElement(c,i(i({ref:t},s),{},{components:n})):a.createElement(c,i({ref:t},s))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=k;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[u]="string"==typeof e?e:l,i[1]=p;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},3362:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>p,metadata:()=>d,toc:()=>u});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),i=["components"],p={id:"thatopen_ui.Table",title:"Class: Table",sidebar_label:"Table",custom_edit_url:null},o=void 0,d={unversionedId:"api/classes/thatopen_ui.Table",id:"api/classes/thatopen_ui.Table",title:"Class: Table",description:"@thatopen/ui.Table",source:"@site/docs/api/classes/thatopen_ui.Table.md",sourceDirName:"api/classes",slug:"/api/classes/thatopen_ui.Table",permalink:"/api/classes/thatopen_ui.Table",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"thatopen_ui.Table",title:"Class: Table",sidebar_label:"Table",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Tab",permalink:"/api/classes/thatopen_ui.Tab"},next:{title:"Tabs",permalink:"/api/classes/thatopen_ui.Tabs"}},s={},u=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"definition",id:"definition",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"expanded",id:"expanded",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"filterFunction",id:"filterfunction",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in-2",level:4},{value:"headersHidden",id:"headershidden",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"indentationInText",id:"indentationintext",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"preserveStructureOnFilter",id:"preservestructureonfilter",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"Accessors",id:"accessors",level:2},{value:"columns",id:"columns",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"csv",id:"csv",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"data",id:"data",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"queryString",id:"querystring",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"tsv",id:"tsv",level:3},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"value",id:"value",level:3},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"Methods",id:"methods",level:2},{value:"downloadData",id:"downloaddata",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-12",level:4}],m={toc:u},k="wrapper";function c(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)(k,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/modules/thatopen_ui"},"@thatopen/ui"),".Table"),(0,r.kt)("p",null,"Heloooooooooo"),(0,r.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"LitElement")),(0,r.kt)("p",{parentName:"li"},"\u21b3 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Table"))))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"definition"},"definition"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"definition"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"TableDefinition")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"{}")),(0,r.kt)("p",null,"A property representing the definition for transforming table data.\nThe keys of the object are the column names, and the values are functions that define the transformation logic."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"An empty object.\n")),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_ui-components//blob/13aa680/packages/core/src/components/Table/index.ts#L307"},"packages/core/src/components/Table/index.ts:307")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"expanded"},"expanded"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"expanded"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"false")),(0,r.kt)("p",null,"A boolean property that determines whether the table is expanded or not.\nWhen ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", the table will be expanded to show all rows.\nWhen ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),", the table will be collapsed to show only the top-level rows."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"false\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"table.expanded = true;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<bim-table expanded></bim-table>\n")),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_ui-components//blob/13aa680/packages/core/src/components/Table/index.ts#L273"},"packages/core/src/components/Table/index.ts:273")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"filterfunction"},"filterFunction"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"filterFunction"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"queryString"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"data"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"TableGroupData"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"queryString"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"data"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"A function type representing the filter function for the table.\nThis function is used to determine whether a given row of data should be included in the filtered results."),(0,r.kt)("h5",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"queryString")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The search string or query used to filter the data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"data")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"TableGroupData")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The data row to be filtered.")))),(0,r.kt)("h5",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"A boolean value indicating whether the data row should be included in the filtered results.\nIf the function returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", the data row will be included in the filtered results.\nIf the function returns ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),", the data row will be excluded from the filtered results."),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_ui-components//blob/13aa680/packages/core/src/components/Table/index.ts#L509"},"packages/core/src/components/Table/index.ts:509")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"headershidden"},"headersHidden"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"headersHidden"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"false")),(0,r.kt)("p",null,"A boolean property that determines whether the table headers are hidden."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.kt)("p",null,"This property can be used to hide the table headers when needed."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"false\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"table.headersHidden = true;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<bim-table headers-hidden></bim-table>\n")),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_ui-components//blob/13aa680/packages/core/src/components/Table/index.ts#L89"},"packages/core/src/components/Table/index.ts:89")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indentationintext"},"indentationInText"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"indentationInText"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"false")),(0,r.kt)("p",null,"A boolean property that determines whether the table indentation should be included in the exported text."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"false\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"table.indentationInText = true;\n")),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_ui-components//blob/13aa680/packages/core/src/components/Table/index.ts#L299"},"packages/core/src/components/Table/index.ts:299")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"preservestructureonfilter"},"preserveStructureOnFilter"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"preserveStructureOnFilter"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"false")),(0,r.kt)("p",null,"A boolean property that determines whether the table preserves its structure when filtering.\nWhen ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", the table will preserve its structure, showing only the filtered rows and their parents.\nWhen ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),", the table will not preserve its structure, showing only the filtered rows."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"false\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"table.preserveStructureOnFilter = true;\n")),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_ui-components//blob/13aa680/packages/core/src/components/Table/index.ts#L287"},"packages/core/src/components/Table/index.ts:287")),(0,r.kt)("h2",{id:"accessors"},"Accessors"),(0,r.kt)("h3",{id:"columns"},"columns"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," ",(0,r.kt)("strong",{parentName:"p"},"columns"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Sets the columns for the table.\nThis property allows you to define the columns order for the table.\nIf this is not set, it will be computed from the ",(0,r.kt)("inlineCode",{parentName:"p"},"table.data")," object.\nThe columns can be provided as an array of strings or objects of type ",(0,r.kt)("inlineCode",{parentName:"p"},"ColumnData"),".\nIf the columns are provided as strings, they will be converted to ",(0,r.kt)("inlineCode",{parentName:"p"},"ColumnData")," objects with a default width."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/api/interfaces/thatopen_ui.ColumnData"},(0,r.kt)("inlineCode",{parentName:"a"},"ColumnData")),")[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An array of strings or objects of type ",(0,r.kt)("inlineCode",{parentName:"td"},"ColumnData"),".")))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const columns: (string | ColumnData)[] = [\n  "Column 1",\n  "Column 2",\n  { name: "Column 3", width: "200px" },\n];\ntable.columns = columns;\n')),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_ui-components//blob/13aa680/packages/core/src/components/Table/index.ts#L116"},"packages/core/src/components/Table/index.ts:116")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"csv"},"csv"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," ",(0,r.kt)("strong",{parentName:"p"},"csv"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"A getter function that generates a CSV (Comma Separated Values) representation of the table data."),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"A string containing the CSV representation of the table data."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const csvData = table.csv;\nconsole.log(csvData); // Output: "Column 1,Column 2\\nValue 1,Value 2\\nValue 3,Value 4"\n')),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_ui-components//blob/13aa680/packages/core/src/components/Table/index.ts#L382"},"packages/core/src/components/Table/index.ts:382")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"data"},"data"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," ",(0,r.kt)("strong",{parentName:"p"},"data"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Sets the data for the table.\nThis property allows you to define the data that will be displayed in the table.\nThe data is expected to be an array of ",(0,r.kt)("inlineCode",{parentName:"p"},"TableGroupData")," objects.\nIf the columns are not explicitly set, they will be computed from the ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," object."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"TableGroupData"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An array of ",(0,r.kt)("inlineCode",{parentName:"td"},"TableGroupData")," objects representing the table data.")))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const data: TableGroupData[] = [\n  { data: { "Column 1": "Value 1", "Column 2": "Value 2" } },\n  { data: { "Column 1": "Value 3", "Column 2": "Value 4" } },\n];\ntable.data = data;\n')),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_ui-components//blob/13aa680/packages/core/src/components/Table/index.ts#L245"},"packages/core/src/components/Table/index.ts:245")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"querystring"},"queryString"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," ",(0,r.kt)("strong",{parentName:"p"},"queryString"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"_value"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Sets the search string for filtering the table data.\nThis property allows you to filter the table data based on a search string.\nIf a search string is provided, the table will only display rows that match the search criteria.\nThe search criteria can be a simple string or a complex query.\nIf a simple string is provided, the table will filter rows based on the string's presence in any column.\nIf a complex query is provided, the table will filter rows based on the query's conditions and values."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"_value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The search string or ",(0,r.kt)("inlineCode",{parentName:"td"},"null")," to clear the search.")))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'table.queryString = "example";\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'table.queryString = "column1="Jhon Doe" & column2=20";\n')),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_ui-components//blob/13aa680/packages/core/src/components/Table/index.ts#L191"},"packages/core/src/components/Table/index.ts:191")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tsv"},"tsv"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," ",(0,r.kt)("strong",{parentName:"p"},"tsv"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"A getter function that generates a Tab Separated Values (TSV) representation of the table data."),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"A string containing the TSV representation of the table data."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const tsvData = table.tsv;\nconsole.log(tsvData); // Output: "Column 1\\tColumn 2\\nValue 1\\tValue 2\\nValue 3\\tValue 4"\n')),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_ui-components//blob/13aa680/packages/core/src/components/Table/index.ts#L397"},"packages/core/src/components/Table/index.ts:397")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"value"},"value"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," ",(0,r.kt)("strong",{parentName:"p"},"value"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"TableGroupData"),"[]"),(0,r.kt)("p",null,"Getter for the ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," property.\nReturns the filtered data if a search string is provided, otherwise returns the original data."),(0,r.kt)("h4",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TableGroupData"),"[]"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const tableValue = table.value;\nconsole.log(tableValue); // Output: The filtered or original data.\n")),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_ui-components//blob/13aa680/packages/core/src/components/Table/index.ts#L162"},"packages/core/src/components/Table/index.ts:162")),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"downloaddata"},"downloadData"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"downloadData"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"fileName?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"format?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"downloadData")," method is used to download the table data in different formats."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fileName")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"BIM Table Data"')),(0,r.kt)("td",{parentName:"tr",align:"left"},'The name of the downloaded file. Default is "BIM Table Data".')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"format")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"json"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"tsv"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"csv"')),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"json"')),(0,r.kt)("td",{parentName:"tr",align:"left"},'The format of the downloaded file. Can be "json", "tsv", or "csv". Default is "json".')))),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This method does not return any value.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'table.downloadData("MyTableData", "tsv");\n')),(0,r.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_ui-components//blob/13aa680/packages/core/src/components/Table/index.ts#L427"},"packages/core/src/components/Table/index.ts:427")))}c.isMDXComponent=!0}}]);
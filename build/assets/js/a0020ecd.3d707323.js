"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[3618],{5409:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var n=r(4848),s=r(8453);const i={},a="StreamSerializer",l={id:"api/@thatopen/fragments/classes/StreamSerializer",title:"StreamSerializer",description:"A class for serializing and deserializing geometry data in a streamed format.",source:"@site/docs/api/@thatopen/fragments/classes/StreamSerializer.md",sourceDirName:"api/@thatopen/fragments/classes",slug:"/api/@thatopen/fragments/classes/StreamSerializer",permalink:"/api/@thatopen/fragments/classes/StreamSerializer",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Serializer",permalink:"/api/@thatopen/fragments/classes/Serializer"},next:{title:"FragmentIdMap",permalink:"/api/@thatopen/fragments/interfaces/FragmentIdMap"}},d={},o=[{value:"Methods",id:"methods",level:2},{value:"export()",id:"export",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"import()",id:"import",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Throws",id:"throws",level:4}];function c(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"streamserializer",children:"StreamSerializer"}),"\n",(0,n.jsx)(t.p,{children:"A class for serializing and deserializing geometry data in a streamed format."}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"export",children:"export()"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"export"}),"(",(0,n.jsx)(t.code,{children:"geometries"}),"): ",(0,n.jsx)(t.code,{children:"Uint8Array"})]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Exports geometry data to a byte array in a streamed format."}),"\n",(0,n.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"geometries"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"/api/@thatopen/fragments/type-aliases/StreamedGeometries",children:(0,n.jsx)(t.code,{children:"StreamedGeometries"})})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"A Map of geometry IDs to their respective position, normal, and index arrays."})]})})]}),"\n",(0,n.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"Uint8Array"})}),"\n",(0,n.jsx)(t.p,{children:"A Uint8Array containing the serialized geometry data."}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"import",children:"import()"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"import"}),"(",(0,n.jsx)(t.code,{children:"bytes"}),"): ",(0,n.jsx)(t.a,{href:"/api/@thatopen/fragments/type-aliases/StreamedGeometries",children:(0,n.jsx)(t.code,{children:"StreamedGeometries"})})]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Imports geometry data from a byte array in a streamed format."}),"\n",(0,n.jsx)(t.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"bytes"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Uint8Array"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The byte array containing the serialized geometry data."})]})})]}),"\n",(0,n.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"/api/@thatopen/fragments/type-aliases/StreamedGeometries",children:(0,n.jsx)(t.code,{children:"StreamedGeometries"})})}),"\n",(0,n.jsx)(t.p,{children:"A Map of geometry IDs to their respective position, normal, and index arrays."}),"\n",(0,n.jsx)(t.h4,{id:"throws",children:"Throws"}),"\n",(0,n.jsx)(t.p,{children:"Will throw an error if the geometry ID is not found."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>l});var n=r(6540);const s={},i=n.createContext(s);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4591],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=o,g=d["".concat(s,".").concat(u)]||d[u]||m[u]||a;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1531:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={},s=void 0,p={unversionedId:"Tutorials/Components/Front/EdgesClipper",id:"Tutorials/Components/Front/EdgesClipper",title:"EdgesClipper",description:"Copying and pasting? We've got you covered! You can find the full source code of this tutorial here.",source:"@site/docs/Tutorials/Components/Front/EdgesClipper.mdx",sourceDirName:"Tutorials/Components/Front",slug:"/Tutorials/Components/Front/EdgesClipper",permalink:"/Tutorials/Components/Front/EdgesClipper",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AreaMeasurement",permalink:"/Tutorials/Components/Front/AreaMeasurement"},next:{title:"IfcStreamer",permalink:"/Tutorials/Components/Front/IfcStreamer"}},c={},d=[{value:"\u2b55\ufe0f Aesthetic Clipping Edges",id:"\ufe0f-aesthetic-clipping-edges",level:3},{value:"\ud83e\udde9 Adding Objects to Scene",id:"-adding-objects-to-scene",level:3},{value:"\u2694\ufe0f Slicing Some Cubes",id:"\ufe0f-slicing-some-cubes",level:3},{value:"\ud83d\udd8c\ufe0f Creating Fine Edges",id:"\ufe0f-creating-fine-edges",level:3},{value:"\ud83d\udcab Using Line Material",id:"-using-line-material",level:4},{value:"\ud83e\udd1d Performing Clipping Events",id:"-performing-clipping-events",level:3},{value:"\ud83e\uddf9 Deleting the Clipping Planes",id:"-deleting-the-clipping-planes",level:3}],m={toc:d},u="wrapper";function g(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)(u,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{title:"Source",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Copying and pasting? We've got you covered! You can find the full source code of this tutorial ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_components/blob/main/packages/front/src/core/EdgesClipper/example.ts"},"here"),".")),(0,a.kt)("h3",{id:"\ufe0f-aesthetic-clipping-edges"},"\u2b55\ufe0f Aesthetic Clipping Edges"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"You can build whole BIM application using Components.\ud83d\udcaa\nOne such essential component is ",(0,a.kt)("strong",{parentName:"p"},"Edges Clipper")," which helps you to add Clipping Planes along\nwith beautiful yet functional edges.\ud83d\udd8d\ufe0f"),(0,a.kt)("admonition",{title:"Advanced but Simple to use",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"\u26a1\ufe0f ",(0,a.kt)("strong",{parentName:"p"},"Simple Clipper")," and ",(0,a.kt)("strong",{parentName:"p"},"Edges Clipper")," are similar, but ",(0,a.kt)("inlineCode",{parentName:"p"},"Edges Clipper")," offers more advanced options.\nIf you want to learn more about ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"SimpleClipper.mdx"},"Simple Clipper")),", visit the tutorial.")),(0,a.kt)("p",null,"In this tutorial, we'll use the ",(0,a.kt)("inlineCode",{parentName:"p"},"EdgesClipper")," to slice two distinct Cubes that each have a unique set of edge effects.\nWith the help of this tutorial, you can quickly add ",(0,a.kt)("strong",{parentName:"p"},"Clipping Planes")," and ",(0,a.kt)("strong",{parentName:"p"},"Configurable Edges")," to your project.\ud83d\ude80"),(0,a.kt)("admonition",{title:"First, let's set up a simple scene!",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"\ud83d\udc40 If you haven't started there, check out ",(0,a.kt)("a",{parentName:"p",href:"SimpleScene.mdx"},"that tutorial first"),"!")),(0,a.kt)("h3",{id:"-adding-objects-to-scene"},"\ud83e\udde9 Adding Objects to Scene"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Let's start by adding two Cubes, we will create a ",(0,a.kt)("a",{parentName:"p",href:"https://threejs.org/docs/index.html?q=box#api/en/geometries/BoxGeometry"},"Box Geometry")," and use it for both Meshes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import Stats from "stats.js";\nimport * as BUI from "@thatopen/ui";\nimport * as THREE from "three";\nimport * as OBC from "@thatopen/components";\nimport * as OBCF from "../..";\n\nconst container = document.getElementById("container")!;\n\nconst components = new OBC.Components();\n\nconst worlds = components.get(OBC.Worlds);\n\nconst world = worlds.create<\n  OBC.SimpleScene,\n  OBC.SimpleCamera,\n  OBCF.PostproductionRenderer\n>();\n\nworld.scene = new OBC.SimpleScene(components);\nworld.renderer = new OBCF.PostproductionRenderer(components, container);\nworld.camera = new OBC.SimpleCamera(components);\n\nworld.renderer.postproduction.enabled = true;\nworld.renderer.postproduction.customEffects.outlineEnabled = true;\n\ncomponents.init();\n\nworld.camera.controls.setLookAt(12, 6, 8, 0, 0, -10);\n\nworld.scene.setup();\n\nconst grids = components.get(OBC.Grids);\ngrids.config.color.setHex(0x666666);\nconst grid = grids.create(world);\nworld.renderer.postproduction.customEffects.excludedMeshes.push(grid.three);\n')),(0,a.kt)("admonition",{title:"Storing Components",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"\ud83e\uddf0 After adding cubes to the scene, we must also add them to ",(0,a.kt)("inlineCode",{parentName:"p"},"components.meshes"),",\nwhich is just an array of all the meshes in the scene.\ud83d\uddc4\ufe0f")),(0,a.kt)("h3",{id:"\ufe0f-slicing-some-cubes"},"\u2694\ufe0f Slicing Some Cubes"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Now that the setup is complete. Let's get started with the interesting part!\nWe will create ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"../api/classes/components.EdgesClipper"},"Edges Clipper"))," and pass the ",(0,a.kt)("strong",{parentName:"p"},"components")," and\n",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"../api/classes/components.EdgesPlane"},"Edges Plane"))," to the constructor."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const cubeGeometry = new THREE.BoxGeometry(3, 3, 3);\n\nconst cubeMaterial = new THREE.MeshStandardMaterial({ color: "#6528D7" });\nconst cube = new THREE.Mesh(cubeGeometry, cubeMaterial);\ncube.position.set(-2, 1.5, 0);\nworld.scene.three.add(cube);\nworld.meshes.add(cube);\n\nconst cube2 = new THREE.Mesh(cubeGeometry, cubeMaterial);\ncube2.position.set(2, 1.5, 0);\nworld.scene.three.add(cube2);\nworld.meshes.add(cube2);\n')),(0,a.kt)("admonition",{title:"PLANE WITH EDGES and TRANSFORMATION CONTROLS",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"\ud83d\udfe6 ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"../api/classes/components.EdgesPlane"},"Edges Plane"))," helps us in adding Clipping Planes to the Clipper Component.")),(0,a.kt)("h3",{id:"\ufe0f-creating-fine-edges"},"\ud83d\udd8c\ufe0f Creating Fine Edges"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Let's now prepare the materials that will be visible on the cube edges.\nWe will use ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://threejs.org/examples/?q=line#webgl_lines_fat"},"LineMaterial"))," for creating edges."),(0,a.kt)("h4",{id:"-using-line-material"},"\ud83d\udcab Using Line Material"),(0,a.kt)("p",null,"After creating the Line Material we will add it to the ",(0,a.kt)("strong",{parentName:"p"},"clipper"),"\nusing ",(0,a.kt)("inlineCode",{parentName:"p"},"clipper.styles.create(styleName: string, mesh: Mesh[], material: LineMaterial)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const casters = components.get(OBC.Raycasters);\ncasters.get(world);\n\nconst clipper = components.get(OBC.Clipper);\nclipper.enabled = true;\n\nconst edges = components.get(OBCF.ClipEdges);\nclipper.Type = OBCF.EdgesPlane;\n")),(0,a.kt)("h3",{id:"-performing-clipping-events"},"\ud83e\udd1d Performing Clipping Events"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"We need a method for instantly producing a clipping plane;\nthis can be accomplished with either a ",(0,a.kt)("inlineCode",{parentName:"p"},"single click")," or a ",(0,a.kt)("inlineCode",{parentName:"p"},"double click")," of the mouse.\nFor this tutorial, we will use ",(0,a.kt)("strong",{parentName:"p"},"Double Click"),", to create a Clipper that will generate a\nplane on the 3D object's face."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const blueFill = new THREE.MeshBasicMaterial({ color: "lightblue", side: 2 });\nconst blueLine = new THREE.LineBasicMaterial({ color: "blue" });\nconst blueOutline = new THREE.MeshBasicMaterial({\n  color: "blue",\n  opacity: 0.5,\n  side: 2,\n  transparent: true,\n});\n\nedges.styles.create(\n  "Red lines",\n  new Set([cube]),\n  world,\n  blueLine,\n  blueFill,\n  blueOutline,\n);\n\nconst salmonFill = new THREE.MeshBasicMaterial({ color: "salmon", side: 2 });\nconst redLine = new THREE.LineBasicMaterial({ color: "red" });\nconst redOutline = new THREE.MeshBasicMaterial({\n  color: "red",\n  opacity: 0.5,\n  side: 2,\n  transparent: true,\n});\n\nedges.styles.create(\n  "Blue lines",\n  new Set([cube2]),\n  world,\n  redLine,\n  salmonFill,\n  redOutline,\n);\n')),(0,a.kt)("admonition",{title:"Raycaster below the hood \ud83c\udfa9",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"We use the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"SimpleRaycaster.mdx"},"Simple Raycaster"))," to determine if the intersection has occurred.\nThe clipper places a plane after detecting the face on which the mouse was clicked.\nHere, the ",(0,a.kt)("strong",{parentName:"p"},"EdgesClipper")," handles everything for you \ud83d\ude0e")),(0,a.kt)("h3",{id:"-deleting-the-clipping-planes"},"\ud83e\uddf9 Deleting the Clipping Planes"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Now that we know how to make multiple clippers, we must also know how to delete them when necessary.\nClipping Edges can be removed using ",(0,a.kt)("inlineCode",{parentName:"p"},"clipper.delete()")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"clipper.delete(plane)"),", which deletes a single plane.\n",(0,a.kt)("strong",{parentName:"p"},"clipper.delete()")," deletes the plane on which your mouse pointer is now located."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"container.ondblclick = () => clipper.create(world);\n")),(0,a.kt)("admonition",{title:"Delete all Clipping Planes",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"\u274e If you want to safely delete all the clipping edges that were created you can simply call\n",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"clipper.deleteAll()")))),(0,a.kt)("p",null,"Great job! \ud83c\udf89 Using the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"../api/classes/components.SimpleClipper"},"Clipper Component")),",\nyou can now effortlessly check BIM models or any other 3D objects with stunning edges.\ud83e\uddd0\nLet's keep it up and check out another tutorial! \ud83c\udf93"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'window.onkeydown = (event) => {\n  if (event.code === "Delete" || event.code === "Backspace") {\n    clipper.delete(world);\n  }\n};\n')),(0,a.kt)("iframe",{src:"https://thatopen.github.io/engine_components/examples/EdgesClipper"}))}g.isMDXComponent=!0}}]);
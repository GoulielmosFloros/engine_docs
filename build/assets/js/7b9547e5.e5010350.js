"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[7031],{6830:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>o});var i=t(4848),s=t(8453);const r={},l="Grid",a={id:"api/@thatopen/ui/classes/Grid",title:"Grid",description:"A custom grid web component for BIM applications. HTML tag: bim-grid",source:"@site/docs/api/@thatopen/ui/classes/Grid.md",sourceDirName:"api/@thatopen/ui/classes",slug:"/api/@thatopen/ui/classes/Grid",permalink:"/api/@thatopen/ui/classes/Grid",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dropdown",permalink:"/api/@thatopen/ui/classes/Dropdown"},next:{title:"Icon",permalink:"/api/@thatopen/ui/classes/Icon"}},d={},o=[{value:"Extends",id:"extends",level:2},{value:"Properties",id:"properties",level:2},{value:"floating",id:"floating",level:3},{value:"Default",id:"default",level:4},{value:"Examples",id:"examples",level:4},{value:"layout?",id:"layout",level:3},{value:"Default",id:"default-1",level:4},{value:"Examples",id:"examples-1",level:4},{value:"layouts",id:"layouts",level:3},{value:"styles",id:"styles",level:3},{value:"Overrides",id:"overrides",level:4}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"grid",children:"Grid"}),"\n",(0,i.jsx)(n.p,{children:"A custom grid web component for BIM applications. HTML tag: bim-grid"}),"\n",(0,i.jsx)(n.h2,{id:"extends",children:"Extends"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"LitElement"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.h3,{id:"floating",children:"floating"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"floating"}),": ",(0,i.jsx)(n.code,{children:"boolean"})," = ",(0,i.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Indicates whether the grid should be displayed in a floating state. When set to true, the grid and its children may have different styling to indicate a floating state, such as being absolutely positioned and having pointer-events set to none. This property is reflected to an attribute, allowing it to be set directly in HTML."}),"\n",(0,i.jsx)(n.h4,{id:"default",children:"Default"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"false\n"})}),"\n",(0,i.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"<bim-grid floating></bim-grid>\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const grid = document.createElement('bim-grid');\r\ngrid.floating = true;\r\ndocument.body.appendChild(grid);\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"layout",children:"layout?"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"optional"})," ",(0,i.jsx)(n.strong,{children:"layout"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Represents the layout configuration of the grid. The layout is defined by a string identifier which corresponds to a predefined grid template in the ",(0,i.jsx)(n.code,{children:"layouts"})," object of the Grid component. Setting this property updates the grid's template and triggers a reconfiguration of the grid's containers based on the new layout. If the specified layout is not defined, a warning is logged, and the layout remains unchanged. This property is reflected to an attribute, allowing it to be set directly in HTML. Changing the layout will dispatch a \"layoutchange\" event, which can be used to react to layout changes."]}),"\n",(0,i.jsx)(n.h4,{id:"default-1",children:"Default"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"undefined\n"})}),"\n",(0,i.jsx)(n.h4,{id:"examples-1",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'<bim-grid layout="default"></bim-grid>\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const grid = document.createElement('bim-grid');\r\ngrid.layout = 'default';\r\ndocument.body.appendChild(grid);\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"layouts",children:"layouts"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"layouts"}),": ",(0,i.jsx)(n.a,{href:"/api/@thatopen/ui/interfaces/Layouts",children:(0,i.jsx)(n.code,{children:"Layouts"})})," = ",(0,i.jsx)(n.code,{children:"{}"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Represents a collection of predefined grid layouts for the Grid component.\r\nEach layout is defined by a unique name, a grid template string, and a map of area names to HTMLElement instances.\r\nThe grid template string defines the structure of the grid, and the area names correspond to the grid-area property of the HTMLElement instances.\r\nThe HTMLElement instances are used to populate the grid with content."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"styles",children:"styles"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.strong,{children:"styles"}),": ",(0,i.jsx)(n.code,{children:"CSSResult"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"CSS styles for the component."}),"\n",(0,i.jsx)(n.h4,{id:"overrides",children:"Overrides"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"LitElement.styles"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);
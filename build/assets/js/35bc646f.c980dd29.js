"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6635],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=o.createContext({}),s=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return o.createElement(p.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(t),d=r,g=m["".concat(p,".").concat(d)]||m[d]||u[d]||a;return t?o.createElement(g,i(i({ref:n},c),{},{components:t})):o.createElement(g,i({ref:n},c))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},22:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>p,default:()=>g,frontMatter:()=>l,metadata:()=>s,toc:()=>m});var o=t(7462),r=t(3366),a=(t(7294),t(3905)),i=["components"],l={},p=void 0,s={unversionedId:"Tutorials/Components/Core/Clipper",id:"Tutorials/Components/Core/Clipper",title:"Clipper",description:"Copying and pasting? We got you covered! You can find the full source code of this tutorial here.",source:"@site/docs/Tutorials/Components/Core/Clipper.mdx",sourceDirName:"Tutorials/Components/Core",slug:"/Tutorials/Components/Core/Clipper",permalink:"/Tutorials/Components/Core/Clipper",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"BoundingBoxer",permalink:"/Tutorials/Components/Core/BoundingBoxer"},next:{title:"Cullers",permalink:"/Tutorials/Components/Core/Cullers"}},c={},m=[{value:"\u2702\ufe0f Clipping Tool",id:"\ufe0f-clipping-tool",level:3},{value:"\ud83c\udfb2 Creating a Cube Mesh",id:"-creating-a-cube-mesh",level:3},{value:"\u2699\ufe0f Adding Simple Clipper",id:"\ufe0f-adding-simple-clipper",level:3},{value:"\ud83e\udd1d Performing Clipping Events",id:"-performing-clipping-events",level:3},{value:"\ud83e\uddf9 Deleting the Clipping Planes",id:"-deleting-the-clipping-planes",level:3}],u={toc:m},d="wrapper";function g(e){var n=e.components,t=(0,r.Z)(e,i);return(0,a.kt)(d,(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{title:"Source",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Copying and pasting? We got you covered! You can find the full source code of this tutorial ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_components/blob/main/packages/core/src/core/Clipper/example.ts"},"here"),".")),(0,a.kt)("h3",{id:"\ufe0f-clipping-tool"},"\u2702\ufe0f Clipping Tool"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"The Clipping Tool is a powerful feature in 3D modelling that helps you dissect 3D objects.\nClipping Tool is useful for inspecting and analyzing objects in detail.\ud83d\udcaa\nIn this tutorial, we will use the Clipping Tool to dissect a Cube using planes and transformation controls.\nThis tutorial will help you add Clipping functionality to your project easily.\ud83d\ude80"),(0,a.kt)("admonition",{title:"First, let's set up a simple scene!",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"\ud83d\udc40 If you haven't started there, check out ",(0,a.kt)("a",{parentName:"p",href:"SimpleScene.mdx"},"that tutorial first"),"!")),(0,a.kt)("h3",{id:"-creating-a-cube-mesh"},"\ud83c\udfb2 Creating a Cube Mesh"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Let's start by adding a Cube, which we can dissect.\nWe will create a ",(0,a.kt)("a",{parentName:"p",href:"https://threejs.org/docs/index.html?q=box#api/en/geometries/BoxGeometry"},"Cube"),"\nwith ",(0,a.kt)("inlineCode",{parentName:"p"},"3x3x3")," dimensions and use red color for the material."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import * as THREE from "three";\nimport Stats from "stats.js";\nimport * as BUI from "@thatopen/ui";\nimport * as OBC from "openbim-components";\n\nconst container = document.getElementById("container")!;\n\nconst components = new OBC.Components();\n\nconst worlds = components.get(OBC.Worlds);\nconst world = worlds.create<\n  OBC.SimpleScene,\n  OBC.SimpleCamera,\n  OBC.SimpleRenderer\n>();\n\nworld.scene = new OBC.SimpleScene(components);\nworld.renderer = new OBC.SimpleRenderer(components, container);\nworld.camera = new OBC.SimpleCamera(components);\n\ncomponents.init();\n\nworld.camera.controls.setLookAt(10, 10, 10, 0, 0, 0);\n\nworld.scene.setup();\n')),(0,a.kt)("p",null,"Now, we will add the Cube to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Scene"),". We must also add the ",(0,a.kt)("strong",{parentName:"p"},"cube")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"components.meshes"),",\nwhich is simply an array of all the meshes in the Scene \ud83d\uddc4\ufe0f."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const cubeGeometry = new THREE.BoxGeometry(3, 3, 3);\nconst cubeMaterial = new THREE.MeshStandardMaterial({ color: "#6528D7" });\nconst cube = new THREE.Mesh(cubeGeometry, cubeMaterial);\ncube.position.set(0, 1.5, 0);\n')),(0,a.kt)("h3",{id:"\ufe0f-adding-simple-clipper"},"\u2699\ufe0f Adding Simple Clipper"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Here comes the interesting part, we will add a Simple Clipper to our scene \ud83e\udd41\nA ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"../api/classes/components.SimpleClipper"},"Simple Clipper"))," requires two things: ",(0,a.kt)("inlineCode",{parentName:"p"},"components")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Simple Plane")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"world.scene.three.add(cube);\nworld.meshes.add(cube);\n\nconst casters = components.get(OBC.Raycasters);\ncasters.get(world);\n")),(0,a.kt)("admonition",{title:"PLANE WITH TRANSFORMATION CONTROLS AND MORE",type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"../api/classes/components.SimplePlane"},"Simple Plane"))," is useful in generating planes along with\ncustomizations.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"SimpleClipper")," includes everything needed to provide clipping capabilities,\nincluding the ability to build numerous clipping planes.\nSimpleClipper also controls the SimplePlane internally,\nallowing you to execute clipping on any 3D object by just dragging the planes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const clipper = new OBC.Clipper(components);\n")),(0,a.kt)("h3",{id:"-performing-clipping-events"},"\ud83e\udd1d Performing Clipping Events"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Now, we need a way to create a Clipping Plane on demand, you can do it with a ",(0,a.kt)("inlineCode",{parentName:"p"},"Single Click")," or\n",(0,a.kt)("inlineCode",{parentName:"p"},"Double Click")," of a mouse.\nFor this tutorial, we will use ",(0,a.kt)("strong",{parentName:"p"},"Double Click"),", to create a Clipper that will generate a\nplane on the 3D object's face."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"clipper.enabled = true;\n")),(0,a.kt)("admonition",{title:"Raycaster below the hood \ud83c\udfa9",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"We use the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"SimpleRaycaster.mdx"},"Simple Raycaster"))," to determine if the intersection has occurred.\nThe clipper places a plane after detecting the face on which the mouse was clicked.\nHere, the SimpleClipper handles everything for you \ud83d\ude0e")),(0,a.kt)("h3",{id:"-deleting-the-clipping-planes"},"\ud83e\uddf9 Deleting the Clipping Planes"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Now that we know how to make multiple clippers, we must also know how to delete them when necessary.\nClipping planes can be removed using ",(0,a.kt)("inlineCode",{parentName:"p"},"clipper.delete()")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"clipper.delete(plane)"),", which deletes a single plane.\n",(0,a.kt)("strong",{parentName:"p"},"clipper.delete()")," deletes the plane on which your mouse pointer is now located."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"container.ondblclick = () => clipper.create(world);\n")),(0,a.kt)("admonition",{title:"Delete all the Clipping Planes",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"\u274e If you want to safely delete all the clipping planes that were created you can simply call\n",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"clipper.deleteAll()")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Congratulations")," \ud83c\udf89 on completing this tutorial! Now you can inspect BIM Models or any 3D Object easily using\n",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"../api/classes/components.SimpleClipper"},"Clipper Component"))," \ud83e\uddd0\nLet's keep it up and check out another tutorial! \ud83c\udf93"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'window.onkeydown = (event) => {\n  if (event.code === "Delete" || event.code === "Backspace") {\n    clipper.delete(world);\n  }\n};\n')),(0,a.kt)("iframe",{src:"https://thatopen.github.io/engine_components/examples/Clipper"}))}g.isMDXComponent=!0}}]);
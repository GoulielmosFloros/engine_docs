"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8182],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=s(n),d=a,f=c["".concat(l,".").concat(d)]||c[d]||u[d]||i;return n?r.createElement(f,o(o({ref:t},m),{},{components:n})):r.createElement(f,o({ref:t},m))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},642:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={id:"openbim_components.UI",title:"Interface: UI",sidebar_label:"UI",custom_edit_url:null},o=void 0,p={unversionedId:"api/interfaces/openbim_components.UI",id:"api/interfaces/openbim_components.UI",title:"Interface: UI",description:"openbim-components.UI",source:"@site/docs/api/interfaces/openbim_components.UI.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/openbim_components.UI",permalink:"/api/interfaces/openbim_components.UI",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"openbim_components.UI",title:"Interface: UI",sidebar_label:"UI",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Resizeable",permalink:"/api/interfaces/openbim_components.Resizeable"},next:{title:"Updateable",permalink:"/api/interfaces/openbim_components.Updateable"}},l={},s=[{value:"Implemented by",id:"implemented-by",level:2},{value:"Properties",id:"properties",level:2},{value:"uiElement",id:"uielement",level:3},{value:"Defined in",id:"defined-in",level:4}],m={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/api/modules/openbim_components"},"openbim-components"),".UI"),(0,a.kt)("p",null,"Whether this component has a representation in the user\ninterface, like a button or a window."),(0,a.kt)("h2",{id:"implemented-by"},"Implemented by"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/classes/openbim_components.FragmentManager"},(0,a.kt)("inlineCode",{parentName:"a"},"FragmentManager"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/classes/openbim_components.FragmentPlans"},(0,a.kt)("inlineCode",{parentName:"a"},"FragmentPlans"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/classes/openbim_components.LengthMeasurement"},(0,a.kt)("inlineCode",{parentName:"a"},"LengthMeasurement"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/classes/openbim_components.OrthoPerspectiveCamera"},(0,a.kt)("inlineCode",{parentName:"a"},"OrthoPerspectiveCamera"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/classes/openbim_components.Simple2DScene"},(0,a.kt)("inlineCode",{parentName:"a"},"Simple2DScene"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/classes/openbim_components.SimpleClipper"},(0,a.kt)("inlineCode",{parentName:"a"},"SimpleClipper")))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"uielement"},"uiElement"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"uiElement"),": ",(0,a.kt)("a",{parentName:"p",href:"/api/classes/openbim_components.UIElement"},(0,a.kt)("inlineCode",{parentName:"a"},"UIElement")),"<{ ",(0,a.kt)("inlineCode",{parentName:"p"},"[name: string]"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"SimpleUIComponent"),";  }",">"),(0,a.kt)("p",null,"The class containing all the buttons, windows, tables, etc., of this component."),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_components/blob/178497c/src/base-types/base-types.ts#L197"},"src/base-types/base-types.ts:197")))}u.isMDXComponent=!0}}]);
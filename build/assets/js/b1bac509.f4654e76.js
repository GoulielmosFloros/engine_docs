"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[5749],{7549:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var a=n(4848),r=n(8453);const s={},i="StreamedGeometries",o={id:"api/@thatopen/fragments/type-aliases/StreamedGeometries",title:"StreamedGeometries",description:"StreamedGeometries: Map\\",source:"@site/docs/api/@thatopen/fragments/type-aliases/StreamedGeometries.md",sourceDirName:"api/@thatopen/fragments/type-aliases",slug:"/api/@thatopen/fragments/type-aliases/StreamedGeometries",permalink:"/api/@thatopen/fragments/type-aliases/StreamedGeometries",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IfcSchema",permalink:"/api/@thatopen/fragments/type-aliases/IfcSchema"},next:{title:"@thatopen/ui",permalink:"/api/@thatopen/ui/"}},l={},p=[{value:"Remarks",id:"remarks",level:2},{value:"Example",id:"example",level:2},{value:"Template",id:"template",level:2},{value:"Template",id:"template-1",level:2},{value:"Template",id:"template-2",level:2},{value:"Template",id:"template-3",level:2},{value:"Template",id:"template-4",level:2}];function m(e){const t={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"streamedgeometries",children:"StreamedGeometries"}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"StreamedGeometries"}),": ",(0,a.jsx)(t.code,{children:"Map"}),"<",(0,a.jsx)(t.code,{children:"number"}),", ",(0,a.jsx)(t.code,{children:"object"}),">"]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Represents a map of streamed geometries."}),"\n",(0,a.jsx)(t.h2,{id:"remarks",children:"Remarks"}),"\n",(0,a.jsx)(t.p,{children:"This map is used to store the position, normal, and index arrays of each geometry.\r\nEach geometry is associated with a unique identifier (number) which usually corresponds to the ExpressID of the geometry in the IFC file that was used to generate the fragments."}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"const streamedGeometries: StreamedGeometries = new Map([\r\n  [1, { position: new Float32Array([0, 0, 0]), normal: new Float32Array([0, 1, 0]), index: new Uint32Array([0, 1, 2]) }],\r\n  [2, { position: new Float32Array([1, 0, 0]), normal: new Float32Array([0, 1, 0]), index: new Uint32Array([3, 4, 5]) }],\r\n]);\n"})}),"\n",(0,a.jsx)(t.h2,{id:"template",children:"Template"}),"\n",(0,a.jsx)(t.p,{children:"The type of the geometry identifier. In this case, it is a number."}),"\n",(0,a.jsx)(t.h2,{id:"template-1",children:"Template"}),"\n",(0,a.jsx)(t.p,{children:"The type of the geometry data. It contains position, normal, and index arrays."}),"\n",(0,a.jsx)(t.h2,{id:"template-2",children:"Template"}),"\n",(0,a.jsx)(t.p,{children:"The type of the position array."}),"\n",(0,a.jsx)(t.h2,{id:"template-3",children:"Template"}),"\n",(0,a.jsx)(t.p,{children:"The type of the normal array."}),"\n",(0,a.jsx)(t.h2,{id:"template-4",children:"Template"}),"\n",(0,a.jsx)(t.p,{children:"The type of the index array."})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var a=n(6540);const r={},s=a.createContext(r);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);